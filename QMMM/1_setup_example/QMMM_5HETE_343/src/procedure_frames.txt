# procedure for frame extraction, preprocessing and selection
# THIS PROTOCOL APPLIES TO ALL SELECTED FRAMES FOR A QM/MM OPTIMIZATION JOB

#===============================#
#	frame_extraction	#
#===============================#

# given a MD run (a given replicate), suitable frames are extracted to serve as initial structures for QM/MM calculations. 

1. Inputs
	`md_run`		MD directory where frames will be extracted
	
2. Jobs
	`frames.ipynb`		Extracts the frames from `md_run` according to some constraints

3. Outputs
	`extracted_frames`	Directory with the extracted frames' .pdb from `frames.ipynb`

#===============================#
#	frame_source		#
#===============================#

# store the relevant inpcrd, prmtop, pdb and act_list from the selected frames


#===============================#
#	frame_preprocessing	#
#===============================#

# All frames in `extracted_frames` are preprocessed generating the coordinates and topology and adapting the Amber .prmtop to ChemShell. 

1. Inputs
	`<FRAME>.pdb`		Set of frames from `extracted_frames`
	`tleap`			Template tleap directory with ligand and iron parameters, as well as `tleap.template`, used for each frame.

2. Jobs
	`amber_to_chemshell_modeller.py`Crops the solvent
					Creates `<NAME>.act_list`
					Adapts the Amber topology to ChemShell.
	
	`generate_params.sh`		Applies tleap to each frame and corrects the topology.
		! Changes required:
			-csc 665	residue number around which to crop the solvent LIGAND.
			-alc 10612	atom number around which to generate `<NAME>.act_list`. Usually the middle of the ligand
			-ram N N N N O O O FE	Atop types for MCPB.py parametrization		

3. Output
	`<FRAME>`		Directory with the correct topology			   
 	


