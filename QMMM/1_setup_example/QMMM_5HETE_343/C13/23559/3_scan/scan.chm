# CHEMSHELL H ABSTRACTION SCAN JOB
# Sergi Ortiz @ UAB
# 6 April 2025

# variable definition
global sys_name_id
set frame 23559


# ! c_file is obtained from the opt job, not from prmtop and inpcrd
set c_file      result_opt_rc_${frame}.c
set prmtop_file ${frame}_solv_cropped_mod.prmtop
set inpcrd_file ${frame}_solv_cropped.inpcrd
set pdb_file    result_opt_rc_${frame}.pdb

set structure_type   rc
set calculation_type scan
set sys_name_id result_${calculation_type}_${structure_type}_${frame}
set localdir /home/sortiz/qmmm/23559_scan 	
#/home/smerce/calculs/QMMM/h_abstraction/${frame}/scan_${Hname}
#scan base directory, where all the input files for the job are


# source active atoms and QM region
source ${frame}_solv.act_list
source ./qm_list

# source ChemShell modules
source /shared/software/easybuild/common/software/Chemshell/3.7/src/interface_turbomole/turbomole.tcl
source /shared/software/easybuild/common/software/Chemshell/3.7/src/interface_amber/parse_amber.tcl


# define residues for HDLC (idk)
set pdbresidues [ pdb_to_res "${pdb_file}" ]
set fil [open "pdbresidues" {RDWR CREAT TRUNC}]
puts $fil "set pdbresidues [ list $pdbresidues ]"
close $fil

#
# SCAN SPECIFIC SETTINGS
#

# set atom numbers
# OH from OH1
set OH   10552
# C (proS H)		
set CX   10574		
set HX   10576
# H (proS H)		
set H    $HX

# set initial counter
# ! If restarting the scan, use the appropiate k from the last structure
    set k 0

    if { $k == 0 } {
        # Create point 0 of the scan from .c file
        exec cp $c_file ${sys_name_id}_0.c

        # Node file
        set t [ open "PES.plt" { RDWR CREAT TRUNC } ]
        puts $t "j, rc, E, deltaE, d_CH, d_HOcof, rc_m"
        close $t

        # Home file
        set t [ open "${localdir}/PES.plt" { RDWR CREAT TRUNC } ]
        puts $t "j, rc, E, deltaE, d_CH, d_HOcof, rc_m"
        close $t

    } else {Â·
        set energy_0 
    }

# define the reaction coordinate (initial, final, step)
# units must be a_0 (distance)
# step of 0.1 Angstrom
    set rc_CH [ interatomic_distance coords=./${sys_name_id}_${k}.c i=$CX j=$H  ]
    set rc_HO [ interatomic_distance coords=./${sys_name_id}_${k}.c i=$H  j=$OH ]
    set rc_i [ expr { $rc_CH - $rc_HO } ]
    set rc_f [ expr { 4.0 * 1.889726 } ]
    set step [ expr { 0.1 * 1.889726 } ]


# QM/MM scan settings
# ! change restraints
# ! change charge
for { set rc $rc_i } { $rc < $rc_f } { set rc [ expr $rc + $step ] } {
    # update counter
    set j [ expr { $k + 1 } ]

    # reinitalise internal energy variable
    matrix dl-find.energy new volatile

    # start QM/MM constrained opt calculation for step j = k + 1
    dl-find coords=${sys_name_id}_${k}.c \
            result=${sys_name_id}_${j}.c \
            residues= $pdbresidues \
            coordinates= hdlc \
            optimizer= lbfgs \
            active_atoms= $act \
            maxene= 100000 \
            tolerance= 0.001 \
            maxstep= 0.1 \
            lbfgs_mem= 1000 \
            list_option= none \
            microiterative= yes \
            inner_residues= { 360 365 540 544 662 663 664 665 } \
            restraints= [ list [ list bonddiff2 $CX $H $H $OH $rc 3.0 ] ] \
            theory= hybrid : [ list \
                    coupling= shift \
                    debug= no \
                    qm_region= $qm_list \
                    qm_theory= turbomole : [ list \
                            hamiltonian= b3lyp \
                            scftype= uhf \
                            basisspec= { { lanl2dz fe } { 6-31g* { h c n o } } } \
                            maxcyc= 1000 \
                            charge= 1 \
                            mult= 6 ] \
                    mm_theory= dl_poly : [ list \
                            conn= $c_file \
                            list_option= none \
                            debug= no \
                            scale14= [ list [ expr 1 /1.2 ] 0.5 ] \
                            amber_prmtop_file=$prmtop_file ] \
        ] \

    # convert .c into .pdb
    read_pdb  file=${pdb_file} coords=dummy.coords
    write_pdb file=./${sys_name_id}_${j}.pdb coords=./${sys_name_id}_${j}.c

    # update c file
    puts stdout "\nThe new coordinates file is: ${sys_name_id}_${j}.c\n"

    # calculate \Delta E (kcal/mol from Hartree)
    set final_energy [expr { [ get_matrix_element matrix=dl-find.energy indices= {0 0 } format=%12.12f ] * 627.509 } ]

    # print \Delta E
    puts stdout "\nThe energy of this point is ${final_energy}\n"

        # save first energy
        if { $k == 0 } {
            set energy_0 $final_energy 
        }

    # compute diference
    set delta [ expr { $final_energy - $energy_0 } ]

    # measure distances (convert from a_0 to Angstrom)
    set rc_   [ expr { $rc * 0.5291772 } ]
    set d_CH  [ interatomic_distance coords=./${sys_name_id}_${j}.c i=$CX j=$H  ]
    set d_CH_ [ expr { $d_CH * 0.5291772 } ]
    set d_HO  [ interatomic_distance coords=./${sys_name_id}_${j}.c i=$H  j=$OH ]
    set d_HO_ [ expr { $d_HO * 0.5291772 } ]
    set rc_m  [ expr { $d_CH_ - $d_HO_ } ]

    # store data to PESs files
    set PES   [ open "PES.plt" {RDWR APPEND} ]
    puts $PES [ format "%s, %-5.5f, %-5.5f, %-5.5f, %-5.5f, %-5.5f, %-5.5f" \
        $j $rc_ $final_energy $delta $d_CH_ $d_HO_ $rc_m ]
    close $PES

    set PES   [ open "${localdir}/PES.plt" {RDWR APPEND} ]
    puts $PES [ format "%s, %-5.5f, %-5.5f, %-5.5f, %-5.5f, %-5.5f, %-5.5f" \
        $j $rc_ $final_energy $delta $d_CH_ $d_HO_ $rc_m ]
    close $PES

    # delete energy object
    delete_object dl-find.energy

    # copy files to localdir
    exec cp -f ${sys_name_id}_${j}.c ${localdir}/structures
    exec cp -f ${sys_name_id}_${j}.pdb ${localdir}/structures
    exec cp -f PES.plt ${localdir}/PES_${sys_name_id}.csv

    # k += 1
    incr k

}

# done :)
times
exit

